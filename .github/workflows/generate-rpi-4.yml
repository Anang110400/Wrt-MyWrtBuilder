# This is a basic workflow to help you get started with Actions

name: Generate RPi-4 OpenWrt Firmware

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Select the source branch"
        required: true
        default: "openwrt"
        type: choice
        options:
          - openwrt
          - immortalwrt
      source_tags:
        description: "Select the revision"
        required: true
        default: "21.02.7"
        type: choice
        options:
          - 21.02.3
          - 21.02.7
          - 22.03.5
          - 23.05.0
          - 23.05.0-rc4
      release:
        description: "Upload the compiled image to Release"
        required: true
        default: "true"
        type: choice
        options:
          - true
          - false

env:
  DOWNLOAD_BASE: https://downloads.${{ inputs.source_branch }}.org
  VENDOR: ${{ inputs.source_branch }}
  VERSION: ${{ inputs.source_tags }}
  UPLOAD_ARTIFACTS: false
  TZ: Asia/Jakarta

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Generate:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Initialization Environment
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip qemu-utils mkisofs
          sudo timedatectl set-timezone "$TZ"

      - name: Setup Environment Variables
        run: |
          echo "DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
          echo "DATETIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          path: origin

      - name: Download Image Builder ${{ inputs.source_branch }}-${{ env.VERSION }}
        id: download
        run: |
          wget -q $DOWNLOAD_BASE/releases/$VERSION/targets/bcm27xx/bcm2711/$VENDOR-imagebuilder-$VERSION-bcm27xx-bcm2711.Linux-x86_64.tar.xz
          tar -xJf *-imagebuilder-* && sync && rm -f *-imagebuilder-*.tar.xz
          echo "status=success" >> $GITHUB_OUTPUT
          cp -r $GITHUB_WORKSPACE/origin/* $GITHUB_WORKSPACE/$VENDOR-imagebuilder-$VERSION-bcm27xx-bcm2711.Linux-x86_64/
      
      - name: Download External Packages
        working-directory: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-bcm27xx-bcm2711.Linux-x86_64
        run: |
          cat external-package-urls.txt | xargs wget -qP packages
         
      - name: Run Patch and DIY Scripts
        working-directory: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-bcm27xx-bcm2711.Linux-x86_64
        run: |
          bash scripts/builder-patch-$VENDOR.sh
          bash scripts/clash.sh
          echo -e "Server space usage before starting to compile: \n$(df -hT ${PWD}) \n"

      - name: Compile Firmware ${{ inputs.source_branch }}-${{ env.VERSION }}
        id: compile
        working-directory: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-bcm27xx-bcm2711.Linux-x86_64
        if: steps.download.outputs.status == 'success' && !cancelled()
        run: |
          bash build-$VENDOR.sh
          echo "status=success" >> $GITHUB_OUTPUT
          echo -e "Server space usage after compilation: \n$(df -hT ${PWD}) \n"

      - name: Clear server space
        working-directory: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-bcm27xx-bcm2711.Linux-x86_64
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        run: |
          rm -rf $(ls . | grep -v "^bin$" | xargs) 2>/dev/null
          df -hT ${PWD}

      - name: Organize Files
        id: organize
        if: steps.compile.outputs.status == 'success' && !cancelled()
        working-directory: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-bcm27xx-bcm2711.Linux-x86_64/bin/targets/bcm27xx/bcm2711
        run: |
          rm -rf *.json
          echo "status=success" >> $GITHUB_OUTPUT
          
      - name: Upload Firmware to Artifacts
        uses: actions/upload-artifact@v2
        if: env.UPLOAD_ARTIFACTS == 'true' && !cancelled()
        with:
          name: ${{ env.VENDOR }}-${{ env.VERSION }}-bcm27xx_bcm2711-images-${{ env.DATETIME }}
          path: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-bcm27xx-bcm2711.Linux-x86_64/bin/targets/bcm27xx/bcm2711/*

      - name: Upload Firmware to Release
        uses: svenstaro/upload-release-action@v2
        if: github.event.inputs.release == 'true'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-bcm27xx-bcm2711.Linux-x86_64/bin/targets/bcm27xx/bcm2711/*
          asset_name: ${{ github.event.repository.name }}-${{ github.sha }}
          tag: friWrt-RPi-4B-${{ inputs.source_branch }}-${{ env.VERSION }}-${{ env.DATE }}
          overwrite: true
          body: |
            ### ${{ inputs.source_branch }} Image information
            - Default IP: 192.168.1.1
            - Default username: root
            - Default password: none
            - Default WIFI name: friWrt_5g
            - Default WIFI password: none
          
      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3
